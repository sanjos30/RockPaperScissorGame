plugins {
    id 'java'

    id 'application'

    // testing and code coverage
  	id 'jacoco'
  	
  	// enable checking code quality
  	id 'pmd'

    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'com.github.actions.toolkit' version '0.2.0'
    id 'com.github.benjamineckstein.github-actions' version '0.0.5'

}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    //lombok dependencies
    compileOnly 'org.projectlombok:lombok:1.18.4'
    
  	annotationProcessor 'org.projectlombok:lombok:1.18.4'
 
}

application {
    mainClassName = 'PaperScissorsRockApp.App'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'PaperScissorsRockApp.App'
        )
    }
}

run {
  // to read user inputs
  standardInput = System.in
}

test {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'

    afterSuite { desc, result ->
        if (!desc.parent) { // will match the outermost suite
            githubActions.publishJUnitResults(result)
        }
    }
}

jacocoTestReport {
  dependsOn test
}

jacocoTestReport {
  reports {
    html.destination layout.buildDirectory.dir('jacocoHtml').get().asFile
  }
  
  
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [ 'PaperScissorsRockApp/**', 'com/rps/game/constants**'])
        }))
    }
  
 }

pmd {
    consoleOutput = true
    rulesMinimumPriority = 2
}